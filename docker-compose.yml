version: "2"
services:
  nginx:
    build:
      context: images/nginx
      args:
        username: ${USERNAME}
        app_path: ${APP_PATH}
    container_name: m2_nginx
    ports:
      - 80:80
      - 443:443
    volumes_from:
      - php
    volumes:
      - ./images/nginx/conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./images/nginx/conf/includes/:/etc/nginx/includes/
      - ./images/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./images/nginx/conf/ssl/:/etc/nginx/ssl/
      - ../var/log/nginx:/var/log/nginx
    links:
      - php

  php:
    build:
      context: images/php
      args:
        username: ${USERNAME}
        app_path: ${APP_PATH}
    container_name: m2_php
    volumes:
      - magento2:${APP_PATH}:nocopy,delegated
      #- ../app:${APP_PATH}:delegated
      - ~/docker-data/m2_php/composer/auh.json:/home/${USERNAME}/.composer/auth.json:delegated
    links:
      - mysql
    stdin_open: true
    tty: true
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"

  mysql:
    image: percona:5.7
    container_name: m2_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ~/docker-data/mysql57:/var/lib/mysql:delegated

  mailhog:
    image: mailhog/mailhog
    container_name: m2_mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: m2_redis
    ports:
      - 6379:6379

  redismin:
    image: redsmin/proxy
    container_name: m2_redismin
    environment:
      REDSMIN_KEY: ${REDISMIN_KEY}
      REDIS_URI: redis://redis:6379

volumes:
  magento2:
    external: true

#bin/magento setup:config:set --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=0
#bin/magento setup:config:set --session-save=redis --session-save-redis-host=redis --session-save-redis-db=1